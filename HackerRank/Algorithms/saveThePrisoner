using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'saveThePrisoner' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. INTEGER m
     *  3. INTEGER s
     */

    public static int saveThePrisoner(int n, int m, int s)
    {
        // int noOfCandy = m;
        // int prisonerToWarn = 0;
        // int pos = s;
        // for(int i = pos; i < n + 1; ++i){
        //     if(i == n){
        //         pos = 1;
        //         i = pos;
                
        //     }
        //     if(m == 0){
        //         prisonerToWarn = i;
        //         break;
        //     }
        //     --m;
        // }
        
        // return prisonerToWarn;
        
        // Calculate the position of the last candy:
        int lastCandyPosition = (s - 1 + m) % n;

        // If lastCandyPosition is 0, it means the last candy goes to the nth prisoner
        return lastCandyPosition == 0 ? n : lastCandyPosition;
         
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int t = Convert.ToInt32(Console.ReadLine().Trim());

        for (int tItr = 0; tItr < t; tItr++)
        {
            string[] firstMultipleInput = Console.ReadLine().TrimEnd().Split(' ');

            int n = Convert.ToInt32(firstMultipleInput[0]);

            int m = Convert.ToInt32(firstMultipleInput[1]);

            int s = Convert.ToInt32(firstMultipleInput[2]);

            int result = Result.saveThePrisoner(n, m, s);

            textWriter.WriteLine(result);
        }

        textWriter.Flush();
        textWriter.Close();
    }
}
